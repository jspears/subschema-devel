{"version":3,"sources":["../src/Dom.js"],"names":["listen","ownerDocument","isNodeInRoot","EventListener","node","event","func","componentOrElement","elem","findDOMNode","document","root","_isNodeInRoot","parentNode"],"mappings":"AAAA;;;;;;QAQgBA,M,GAAAA,M;QASAC,a,GAAAA,a;QAYAC,Y,GAAAA,Y;;AA5BhB;;;;AACA;;;;;;AAEO,IAAMC,+DAAN;AACP;;;AAGO,SAASH,MAAT,CAAgBI,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,EAAmC;AACtC,WAAOH,cAAcH,MAAd,CAAqBC,cAAcG,IAAd,CAArB,EAA0CC,KAA1C,EAAiDC,IAAjD,CAAP;AACH;AACD;;;;;;AAMO,SAASL,aAAT,CAAuBM,kBAAvB,EAA2C;AAC9C,QAAIC,OAAO,mBAASC,WAAT,CAAqBF,kBAArB,CAAX;AACA,WAAOC,QAAQA,KAAKP,aAAb,IAA8BS,QAArC;AACH;AACD;;;;;;;;AAQO,SAASR,YAAT,CAAsBE,IAAtB,EAA4BO,IAA5B,EAAkC;AACrCP,WAAO,mBAASK,WAAT,CAAqBL,IAArB,CAAP,EAAmCO,OAAO,mBAASF,WAAT,CAAqBE,IAArB,CAA1C;AACA,WAAOC,cAAcR,IAAd,EAAoBO,IAApB,CAAP;AACH;AACD,SAASC,aAAT,CAAuBR,IAAvB,EAA6BO,IAA7B,EAAmC;AAC/B,WAAOP,IAAP,EAAa;AACT,YAAIA,SAASO,IAAb,EAAmB;AACf,mBAAO,IAAP;AACH;AACDP,eAAOA,KAAKS,UAAZ;AACH;;AAED,WAAO,KAAP;AACH;;kBAEe;AACZb,kBADY;AAEZC,gCAFY;AAGZC;AAHY,C","file":"Dom.js","sourcesContent":["\"use strict\";\nimport _EventListener from 'fbjs/lib/EventListener';\nimport ReactDOM from 'react-dom';\n\nexport const EventListener = _EventListener;\n/**\n * listen\n */\nexport function listen(node, event, func) {\n    return EventListener.listen(ownerDocument(node), event, func);\n}\n/**\n * Get elements owner document\n *\n * @param {ReactComponent|HTMLElement} componentOrElement\n * @returns {HTMLElement}\n */\nexport function ownerDocument(componentOrElement) {\n    var elem = ReactDOM.findDOMNode(componentOrElement);\n    return elem && elem.ownerDocument || document;\n}\n/**\n * Checks whether a node is within\n * a root nodes tree\n *\n * @param {DOMElement} node\n * @param {DOMElement} root\n * @returns {boolean}\n */\nexport function isNodeInRoot(node, root) {\n    node = ReactDOM.findDOMNode(node), root = ReactDOM.findDOMNode(root);\n    return _isNodeInRoot(node, root);\n}\nfunction _isNodeInRoot(node, root) {\n    while (node) {\n        if (node === root) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n\n    return false;\n}\n\nexport default ({\n    listen,\n    ownerDocument,\n    isNodeInRoot\n});"]}