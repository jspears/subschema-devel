{"version":3,"sources":["../../src/templates/EditorTemplate.jsx"],"names":["EditorTemplate","props","Content","name","htmlFor","title","help","labelClass","hasTitleClass","noTitleClass","errorClass","helpClass","error","hasErrorClass","errorClassName","message","fieldClass","children","titleObj","content","propTypes","string","style","injectClass","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,c;;;;;;;;;;iCAgBR;AAAA,yBAC4K,KAAKC,KADjL;AAAA,gBACAC,OADA,UACAA,OADA;AAAA,gBACSC,IADT,UACSA,IADT;AAAA,gBACeC,OADf,UACeA,OADf;AAAA,gBACwBC,KADxB,UACwBA,KADxB;AAAA,gBAC+BC,IAD/B,UAC+BA,IAD/B;AAAA,gBACqCC,UADrC,UACqCA,UADrC;AAAA,gBACiDC,aADjD,UACiDA,aADjD;AAAA,gBACgEC,YADhE,UACgEA,YADhE;AAAA,gBAC8EC,UAD9E,UAC8EA,UAD9E;AAAA,gBAC0FC,SAD1F,UAC0FA,SAD1F;AAAA,gBACqGC,KADrG,UACqGA,KADrG;AAAA,gBAC4GC,aAD5G,UAC4GA,aAD5G;AAAA,gBAC2HC,cAD3H,UAC2HA,cAD3H;AAAA,gBAC2IC,OAD3I,UAC2IA,OAD3I;AAAA,gBACoJC,UADpJ,UACoJA,UADpJ;AAAA,gBACgKC,QADhK,UACgKA,QADhK;;;AAGL,gBAAIJ,aAAJ,EAAmB;AACfC,iCAAiBD,aAAjB;AACH;AACD,gBAAMK,WAAW,OAAOb,KAAP,IAAgB,QAAhB,GAA2B,EAACD,gBAAD,EAAUe,SAASd,KAAnB,EAA3B,GAAuDA,KAAxE;AACA,mBAAQ;AAAA;AAAA,kBAAK,WAAWW,aAAW,GAAX,IAAkBJ,SAAS,IAAT,GAAgBE,kBAAkB,EAAlC,GAAuC,EAAzD,CAAhB;AACJ,8CAAC,OAAD,IAAS,SAASI,QAAlB,EAA4B,WAAWX,UAAvC,EAAmD,MAAK,OAAxD,GADI;AAGJ;AAAA;AAAA,sBAAK,WAAWF,QAAQG,aAAR,GAAwBC,YAAxC;AACKQ,4BADL;AAEI,kDAAC,OAAD,IAAS,SAASL,SAASN,IAA3B,EAAkC,KAAI,aAAtC,EAAoD,MAAK,GAAzD;AACS,mCAAWM,QAAQF,UAAR,GAAqBC,SADzC;AAFJ;AAHI,aAAR;AASH;;;;;AAhCgBX,c,CACVoB,S,GAAY;AACfR,WAAO,6BAAUA,KADF;AAEfP,WAAO,6BAAUA,KAFF;AAGfF,UAAM,6BAAUkB,MAHD;AAIff,UAAM,6BAAUa,OAJD;AAKfG,WAAO,6BAAUA,KALF;AAMflB,aAAS,6BAAUA,OANJ;AAOfF,aAAS,6BAAUqB;AAPJ,C;AADFvB,c,CAWVwB,Y,GAAe;AAClBtB;AADkB,C;AAXLF,c;kBAAAA,c;AAiCpB","file":"EditorTemplate.js","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from \"subschema-prop-types\";\nimport UninjectedContent from \"subschema-core/lib/Content\";\n\nexport default class EditorTemplate extends Component {\n    static propTypes = {\n        error: PropTypes.error,\n        title: PropTypes.title,\n        name: PropTypes.string,\n        help: PropTypes.content,\n        style: PropTypes.style,\n        htmlFor: PropTypes.htmlFor,\n        Content: PropTypes.injectClass\n    };\n\n    static defaultProps = {\n        Content: UninjectedContent\n    };\n\n\n    render() {\n        let {Content, name, htmlFor, title, help, labelClass, hasTitleClass, noTitleClass, errorClass, helpClass, error, hasErrorClass, errorClassName, message, fieldClass, children} = this.props;\n\n        if (hasErrorClass) {\n            errorClassName = hasErrorClass;\n        }\n        const titleObj = typeof title == 'string' ? {htmlFor, content: title} : title;\n        return (<div className={fieldClass+\" \" + (error != null ? errorClassName || '' : '')}>\n            <Content content={titleObj} className={labelClass} type=\"label\"/>\n\n            <div className={title ? hasTitleClass : noTitleClass}>\n                {children}\n                <Content content={error || help } key='error-block' type='p'\n                         className={error ? errorClass : helpClass}/>\n            </div>\n        </div>);\n    }\n};\n"]}