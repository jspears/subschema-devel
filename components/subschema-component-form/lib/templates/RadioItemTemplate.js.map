{"version":3,"sources":["../../src/templates/RadioItemTemplate.jsx"],"names":["RadioItemTemplate","props","Content","label","namespaceClass","labelHTML","children","checked","checkedClass","uncheckedClass","id","path","className","join","type","wrapperType","content","labelType","htmlFor","propTypes","any","bool","string","injectClass","style","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,iB;;;;;;;;;;iCAqBR;AAAA,yBACwG,KAAKC,KAD7G;AAAA,gBACAC,OADA,UACAA,OADA;AAAA,gBACSC,KADT,UACSA,KADT;AAAA,gBACgBC,cADhB,UACgBA,cADhB;AAAA,gBACgCC,SADhC,UACgCA,SADhC;AAAA,gBAC2CC,QAD3C,UAC2CA,QAD3C;AAAA,gBACqDC,OADrD,UACqDA,OADrD;AAAA,gBAC8DC,YAD9D,UAC8DA,YAD9D;AAAA,gBAC4EC,cAD5E,UAC4EA,cAD5E;AAAA,gBAC4FC,EAD5F,UAC4FA,EAD5F;AAAA,gBACgGC,IADhG,UACgGA,IADhG;;AAELD,iBAAKA,MAAMC,IAAX;AACAR,oBAAQE,YAAYA,SAAZ,GAAwBF,KAAhC;AACAK,2BAAeA,gBAAgB,EAA/B;AACAL,oBAAQ,OAAOA,KAAP,KAAiB,QAAjB,GAA4B;AAChCS,2BAAW,CAACR,cAAD,EAAiBG,UAAUC,YAAV,GAAyBC,cAA1C,EAA0DI,IAA1D,CAA+D,GAA/D,CADqB;AAEhCC,sBAAM,KAAKb,KAAL,CAAWc,WAFe;AAGhCC,yBAAS,CAAC;AACNF,0BAAM,KAAKb,KAAL,CAAWgB,SADX;AAENL,+BAAW,EAFL;AAGNM,6BAASR,EAHH;AAIN;AACAM,6BAAS,CAAC,IAAD,EAAOb,KAAP;AALH,iBAAD;AAHuB,aAA5B,GAUJA,KAVJ;AAWA,mBAAQ;AAAC,uBAAD;AAAA,kBAAS,SAASA,KAAlB;AACHG;AADG,aAAR;AAGH;;;;;AAxCgBN,iB,CACVmB,S,GAAY;AACfhB,WAAO,6BAAUiB,GADF;AAEff,eAAW,6BAAUe,GAFN;AAGfb,aAAS,6BAAUc,IAHJ;AAIfb,kBAAc,6BAAUc,MAJT;AAKfZ,QAAI,6BAAUA,EALC;AAMfC,UAAM,6BAAUA,IAND;AAOfT,aAAS,6BAAUqB,WAPJ;AAQfC,WAAO,6BAAUA;AARF,C;AADFxB,iB,CAYVyB,Y,GAAe;AAClBvB,8BADkB;AAElBE,oBAAgB,OAFE;AAGlBI,kBAAc,EAHI;AAIlBC,oBAAgB,EAJE;AAKlBQ,eAAW,OALO;AAMlBF,iBAAa;AANK,C;AAZLf,iB;kBAAAA,iB","file":"RadioItemTemplate.js","sourcesContent":["import React, {Component} from \"react\";\nimport UninjectedContent from \"subschema-core/lib/Content\";\nimport PropTypes from \"subschema-prop-types\";\n\nexport default class RadioItemTemplate extends Component {\n    static propTypes = {\n        label: PropTypes.any,\n        labelHTML: PropTypes.any,\n        checked: PropTypes.bool,\n        checkedClass: PropTypes.string,\n        id: PropTypes.id,\n        path: PropTypes.path,\n        Content: PropTypes.injectClass,\n        style: PropTypes.style\n    };\n\n    static defaultProps = {\n        Content: UninjectedContent,\n        namespaceClass: \"radio\",\n        checkedClass: \"\",\n        uncheckedClass: \"\",\n        labelType: 'label',\n        wrapperType: 'div'\n    };\n\n    render() {\n        let {Content, label, namespaceClass, labelHTML, children, checked, checkedClass, uncheckedClass, id, path} = this.props;\n        id = id || path;\n        label = labelHTML ? labelHTML : label;\n        checkedClass = checkedClass || '';\n        label = typeof label === 'string' ? {\n            className: [namespaceClass, checked ? checkedClass : uncheckedClass].join(' '),\n            type: this.props.wrapperType,\n            content: [{\n                type: this.props.labelType,\n                className: '',\n                htmlFor: id,\n                //true -outputs child.\n                content: [true, label]\n            }]\n        } : label;\n        return (<Content content={label}>\n            {children}\n        </Content>);\n    }\n}\n"]}