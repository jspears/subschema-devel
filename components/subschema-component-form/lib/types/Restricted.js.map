{"version":3,"sources":["../../src/types/Restricted.jsx"],"names":["Restricted","handleSelectionRange","caret","input","refs","findDOMNode","state","setSelectionRange","handleValueChange","e","_value","target","value","props","onValid","formatter","onChange","onKeyDown","fieldAttrs","handleKeyDown","contextTypes","defaultProps","propTypes","onBlur","blurValidate","event","onKeyUp","onFocus","onPaste","id","name","htmlFor","className","typeClass","placeholder","string","validEvent","valueEvent","injectedProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;IAEqBA,U;;;;;;;;;;;;;;wNA2BjBC,oB,GAAuB,UAACC,KAAD,EAAW;AAC9B,gBAAIC,QAAQ,MAAKC,IAAL,IAAa,mBAASC,WAAT,CAAqB,MAAKD,IAAL,CAAUD,KAA/B,CAAzB;AACA,gBAAI,CAACA,KAAL,EAAY;AACR;AACH;;AAED,gBAAI,MAAKG,KAAL,CAAWJ,KAAX,IAAoB,IAAxB,EAA8B;AAC1BC,yBAASA,MAAMI,iBAAN,CAAwB,MAAKD,KAAL,CAAWJ,KAAnC,EACL,MAAKI,KAAL,CAAWJ,KADN,CAAT;AAEH;AACJ,S,QAEDM,iB,GAAoB,UAACC,CAAD,EAAO;AACvB,kBAAKC,MAAL,CAAYD,EAAEE,MAAF,CAASC,KAArB,EAA4B,KAA5B;AACH,S;;;;;iCAEQ;AAAA,yBAC0E,KAAKC,KAD/E;AAAA,gBACCC,OADD,UACCA,OADD;AAAA,gBACUC,SADV,UACUA,SADV;AAAA,gBACqBC,QADrB,UACqBA,QADrB;AAAA,gBAC+BC,SAD/B,UAC+BA,SAD/B;AAAA,gBAC0CC,UAD1C,UAC0CA,UAD1C;AAAA,gBACsDN,KADtD,UACsDA,KADtD;AAAA,gBACgEC,KADhE;;AAEL,mBAAO,gEAAO,KAAI,OAAX,IAAwBA,KAAxB,EAAmCK,UAAnC;AACO,uBAAO,KAAKZ,KAAL,CAAWM,KADzB,EACgC,WAAW,KAAKO,aADhD;AAEO,0BAAU,KAAKX,iBAFtB,IAAP;AAGH;;;;;AAhDgBR,U,CACVoB,Y,GAAe,6BAAUA,Y;AADfpB,U,CAGVqB,Y,GAAe;AAClBP,iCADkB;AAElBF,WAAS;AAFS,C;AAHLZ,U,CAOVsB,S,GAAe;AAClBC,YAAa,6BAAUC,YADL;AAElBP,eAAa,6BAAUQ,KAFL;AAGlBC,aAAa,6BAAUD,KAHL;AAIlBE,aAAa,6BAAUF,KAJL;AAKlBG,aAAa,6BAAUH,KALL;AAMlBb,WAAa,6BAAUA,KANL;AAOlBiB,QAAa,6BAAUA,EAPL;AAQlBC,UAAa,6BAAUC,OARL;AASlBC,eAAa,6BAAUC,SATL;AAUlBC,iBAAa,6BAAUC,MAVL;AAWlBrB,aAAa,6BAAUsB,UAXL;AAYlBpB,cAAa,6BAAUqB,UAZL;AAalBtB,eAAa,6BAAUoB;AAbL,C;AAPLnC,U,CAuBVsC,a,GAAgB;AACnB1B,WAAO;AADY,C;AAvBNZ,U;kBAAAA,U","file":"Restricted.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RestrictedMixin from './RestrictedMixin';\nimport PropTypes from 'subschema-prop-types';\nimport { noop } from 'subschema-utils';\n\nexport default class Restricted extends RestrictedMixin {\n    static contextTypes = PropTypes.contextTypes;\n\n    static defaultProps = {\n        onValid: noop,\n        value  : ''\n    };\n    static propTypes    = {\n        onBlur     : PropTypes.blurValidate,\n        onKeyDown  : PropTypes.event,\n        onKeyUp    : PropTypes.event,\n        onFocus    : PropTypes.event,\n        onPaste    : PropTypes.event,\n        value      : PropTypes.value,\n        id         : PropTypes.id,\n        name       : PropTypes.htmlFor,\n        className  : PropTypes.typeClass,\n        placeholder: PropTypes.string,\n        onValid    : PropTypes.validEvent,\n        onChange   : PropTypes.valueEvent,\n        formatter  : PropTypes.string\n    };\n\n    static injectedProps = {\n        value: '.'\n    };\n\n    handleSelectionRange = (caret) => {\n        var input = this.refs && ReactDOM.findDOMNode(this.refs.input);\n        if (!input) {\n            return;\n        }\n\n        if (this.state.caret != null) {\n            input && input.setSelectionRange(this.state.caret,\n                this.state.caret);\n        }\n    };\n\n    handleValueChange = (e) => {\n        this._value(e.target.value, false);\n    };\n\n    render() {\n        var { onValid, formatter, onChange, onKeyDown, fieldAttrs, value, ...props } = this.props\n        return <input ref=\"input\"  {...props} {...fieldAttrs}\n                      value={this.state.value} onKeyDown={this.handleKeyDown}\n                      onChange={this.handleValueChange}/>\n    }\n}\n"]}