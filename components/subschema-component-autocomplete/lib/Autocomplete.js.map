{"version":3,"sources":["../src/Autocomplete.jsx"],"names":["Autocomplete","state","suggestions","showing","focus","hide","selectValue","selected","input","i","l","options","found","p","getProcessor","trim","label","length","opt","onSelect","props","onBlur","val","value","name","path","setState","un","bindDocument","_bound","unbindDocument","_onDocumentClickListener","listen","handleDocumentClick","_onDocumentKeyupListener","handleDocumentKeyUp","_onDocumentKeydownListener","handleDocumentEnter","e","keyCode","preventDefault","stopPropagation","isNodeInRoot","target","handleSuggestionClick","o","processor","onChange","format","_handleDispatch","_fetch","cancel","_this","fetch","url","err","autoSelectSingle","onInputChange","handleKeyUp","onKeyUp","call","s","update","key","Math","max","min","handleChange","handleFocus","showAllOnFocus","onFocus","handlePaste","event","items","clipboardData","getAsString","handleBlur","_processProps","context","nextProps","nextState","v","setValue","remove","itemTemplate","listGroupClass","map","data","template","foundClass","namespaceClass","inputType","id","notFoundClass","placeholder","inputProps","onPaste","onKeyDown","autoComplete","Input","Clazz","renderSuggestions","propTypes","type","valueEvent","minLength","number","bool","maxInputLength","content","cssClass","style","expression","string","defaultProps","any","inputValue"],"mappings":"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","file":"Autocomplete.js","sourcesContent":["import React, { Component } from 'react';\nimport Dom from 'subschema-component-form/lib/Dom';\nimport PropTypes from 'subschema-prop-types';\nimport { RenderTemplate as renderTemplate } from 'subschema-core';\n\nexport default class Autocomplete extends Component {\n\n\n    static propTypes = {\n        inputType       : PropTypes.type,\n        onChange        : PropTypes.valueEvent,\n        onSelect        : PropTypes.event,\n        minLength       : PropTypes.number,\n        autoSelectSingle: PropTypes.bool,\n        maxInputLength  : PropTypes.number,\n        itemTemplate    : PropTypes.template,\n        processor       : PropTypes.processor,\n        showing         : PropTypes.content,\n        foundClass      : PropTypes.cssClass,\n        notFoundClass   : PropTypes.cssClass,\n        options         : PropTypes.options,\n        onInputChange   : PropTypes.event,\n        style           : PropTypes.style,\n        url             : PropTypes.expression,\n        placeholder     : PropTypes.string,\n        showAllOnFocus  : PropTypes.bool\n\n    };\n\n    static defaultProps = {\n        minLength     : 1,\n        maxInputLength: 200,\n        itemTemplate  : \"AutocompleteItemTemplate\",\n        inputType     : {\n            type        : 'Text',\n            propTypes   : {\n                value       : PropTypes.any,\n                autoComplete: PropTypes.string\n            },\n            defaultProps: { value: '', autoComplete: 'off' }\n        },\n        processor     : 'OptionsProcessor',\n        showing       : 'Searching...',\n        input         : 'input',\n        inputValue    : 'input'\n    };\n\n    state = { suggestions: [], showing: false, focus: -1 };\n\n    componentWillMount() {\n        this._processProps(this.props);\n    }\n\n    componentWillReceiveProps(props, context) {\n        this._processProps(props);\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if (nextState && nextState.suggestions\n            && nextState.suggestions.length) {\n            this.bindDocument();\n        } else {\n            this.unbindDocument();\n        }\n    }\n\n\n    setValue(v) {\n        const p     = this.processor();\n        const value = p.value(v);\n        const input = p.format(v);\n        this.setState({\n            value,\n            selected   : v,\n            input,\n            showing    : false,\n            suggestions: []\n        });\n    }\n\n    /** In the event that the value does not have the meta data for displaying\n     * We will try to fetch the object and format it.\n     * @param props\n     * @private\n     */\n    _processProps(props) {\n        let value = props.value;\n        if (value && value !== this.state.value) {\n            //see if we can get the formatted value from the value, may not\n            // work.\n            let input = props.processor.format(value);\n            if (input == null) {\n                //It didn't format to a value, go fetch it so we can display it.\n                props.processor.fetch(props.url, value, this, (e, o) => {\n                    if (o && o.length === 1) {\n                        this.setValue(o[0]);\n                    } else {\n                        this.setState({\n                            suggestions: o,\n                            showing    : true\n                        });\n                    }\n\n                });\n            } else {\n                this.setState({ input, value });\n            }\n        }\n    }\n\n    /**\n     * Hide could be called when a user has not selected a value.\n     *\n     * If their is a selected value and input equals its label select it.\n     * So if there is only 1 selection select it.\n     * If\n     */\n    hide = (selectValue) => {\n        let { selected, input, suggestions, focus } = this.state,\n            i                                       = 0, l,\n            options, found                          = false;\n        suggestions                                 = suggestions || [];\n        if (selectValue) {\n\n\n            const p = this.getProcessor();\n            if (selectValue && focus > -1) {\n\n                selected = suggestions[focus];\n            } else if (input == null || input.trim() === '') {\n                selected = null;\n                input    = null;\n            } else if (!selected || input !== selected.label) {\n                if (suggestions.length === 1) {\n                    selected = suggestions[0];\n                    input    = selected.label;\n                } else {\n                    selected = null;\n                    options  = suggestions;\n                    l        = options.length;\n                    for (; i < l; i++) {\n                        const opt = options[i];\n                        if (opt.label === input) {\n                            selected = opt;\n                            input    = opt.label;\n                            found    = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        input = null;\n                    }\n                }\n            }\n            if (selected !== this.state.selected) {\n                this.onSelect(selected);\n            } else {\n                if (this.props.onBlur) {\n                    this.props.onBlur(selected && selected.val,\n                        this.props.value, this.props.name, this.props.path);\n                }\n                this.setState({\n                    suggestions: [],\n                    selected,\n                    input,\n                    showing    : false,\n                    focus      : -1\n                });\n            }\n        } else {\n            this.setState({ showing: false, focus: -1, suggestions: [] },\n                this.un)\n        }\n        //        this.props.onBlur();\n    };\n\n\n    bindDocument = () => {\n        if (this._bound) {\n            return;\n        }\n        this.unbindDocument();\n        this._bound                   = true;\n        this._onDocumentClickListener =\n            Dom.listen(this, 'click', this.handleDocumentClick);\n\n        this._onDocumentKeyupListener =\n            Dom.listen(this, 'keyup', this.handleDocumentKeyUp);\n\n        this._onDocumentKeydownListener =\n            Dom.listen(this, 'keypress', this.handleDocumentEnter);\n    };\n\n    componentWillUnmount() {\n        this.unbindDocument();\n    }\n\n    unbindDocument() {\n        this._bound = false;\n        if (this._onDocumentClickListener) {\n            this._onDocumentClickListener.remove();\n        }\n\n        if (this._onDocumentKeyupListener) {\n            this._onDocumentKeyupListener.remove();\n        }\n        if (this._onDocumentKeydownListener) {\n            this._onDocumentKeydownListener.remove();\n        }\n    }\n\n\n    handleDocumentEnter = (e) => {\n\n        if (e.keyCode === 13 && this.state.suggestions\n            && this.state.suggestions.length) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.hide(true);\n        }\n    };\n\n\n    handleDocumentKeyUp = (e) => {\n\n        if (e.keyCode === 27) {\n            this.hide(false);\n        }\n    };\n\n\n    handleDocumentClick = (e) => {\n        // If the click originated from within this component\n        // don't do anything.\n        if (Dom.isNodeInRoot(e.target, this)) {\n            return;\n        }\n\n        this.hide(false);\n    };\n\n\n    processor() {\n        return this.props.processor;\n    }\n\n    handleSuggestionClick = (o) => {\n        this.onSelect(o);\n    };\n\n    onSelect = (o) => {\n        if (this.props.onSelect(o) === false) {\n            return;\n        }\n        const p     = this.processor();\n        const value = p.value(o);\n        if (this.props.onChange(value) !== false) {\n            const input = p.format(o);\n            this.setState({\n                suggestions: [],\n                showing    : false,\n                focus      : -1,\n                selected   : o,\n                value,\n                input\n            });\n        }\n    };\n\n    _handleDispatch = (input) => {\n        this.setState({\n            input,\n            selected: null\n        });\n\n        if (this._fetch && this._fetch.cancel) {\n            this._fetch.cancel();\n        }\n        const _this = this;\n        this._fetch = this.processor().fetch(this.props.url, input, this,\n            (err, suggestions) => {\n                if (err) {\n                    return;\n                }\n                if (_this.props.autoSelectSingle && suggestions\n                    && suggestions.length === 1) {\n                    _this.onSelect(suggestions[0]);\n                } else {\n                    _this.props.onInputChange(input);\n                    _this.setState({\n                        suggestions: suggestions || [],\n                        showing    : true,\n                        input\n                    });\n                }\n            });\n    };\n\n\n    handleKeyUp = (e) => {\n        if (this.props.onKeyUp) {\n            this.props.onKeyUp.call(this, e);\n        }\n        let focus = this.state.focus, s = this.state.suggestions;\n        if (s && s.length) {\n            let update = false;\n            switch (e.key || e.keyCode) {\n                case 'Up':\n                case 38:\n                case 'ArrowUp': {\n                    focus  = Math.max(-1, focus - 1);\n                    update = true;\n                    break;\n                }\n                case 40:\n                case 'Down':\n                case 'ArrowDown': {\n                    focus  = Math.min(s.length, focus + 1)\n                    update = true;\n                    break;\n                }\n                case 'Enter': {\n                    if (e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                    if (s.length) {\n                        this.handleSuggestionClick(\n                            s[Math.max(this.state.focus, 0)]);\n                        this.setState(\n                            { suggestions: [], showing: false, focus: -1 });\n\n                        return;\n                    }\n                    this.hide();\n                    break;\n                }\n            }\n            if (update) {\n                //e.preventDefault();\n                this.setState({ focus });\n            }\n        }\n    };\n\n    handleChange = (e) => {\n        this._handleDispatch(e.target.value);\n    };\n    handleFocus  = (e) => {\n        if (!this.props.showAllOnFocus) {\n            return this.props.onFocus && this.props.onFocus(e);\n        }\n        this._handleDispatch(this.state.input)\n\n    };\n\n    handlePaste = (event) => {\n        const items = event.clipboardData && event.clipboardData.items;\n        items && items[0] && items[0].getAsString((input) => {\n\n            this.setState({ input, suggestions: [], showing: false });\n        });\n    };\n\n\n    handleBlur = (event) => {\n        const suggestions = this.state.suggestions || [];\n        if (suggestions.length === 1 && !this.state.selected) {\n            this.handleSuggestionClick(\n                suggestions[Math.max(0, this.state.focus)]);\n        }\n        if (this.props.onBlur) {\n            this.props.onBlur(event);\n        }\n    };\n\n    renderSuggestions() {\n        const suggestions = this.state.suggestions || [];\n        if (this.state.showing === false || suggestions.length === 0) {\n\n            return null;\n        }\n        const { focus, input }      = this.state;\n        const processor             = this.processor();\n        const handleSuggestionClick = this.handleSuggestionClick;\n        const { itemTemplate }      = this.props;\n        return <ul className={this.props.listGroupClass}>\n            {suggestions.map((data, i) => renderTemplate({\n                template: itemTemplate,\n                key     : `autocomplete-${i}`,\n                focus   : focus === i,\n                value   : input,\n                onSelect: handleSuggestionClick,\n                data,\n                processor,\n            }))}</ul>\n\n\n    }\n\n    render() {\n        const suggestions = this.state.suggestions\n                            || [];\n        const {\n                  foundClass, namespaceClass, inputType, id,\n                  input, notFoundClass, placeholder\n              }           = this.props;\n        const inputProps  = {\n            onPaste     : this.handlePaste,\n            onKeyDown   : this.handleKeyUp,\n            onBlur      : this.handleBlur,\n            onFocus     : this.handleFocus,\n            onChange    : this.handleChange,\n            value       : this.state.input,\n            autoComplete: 'off',\n            id,\n            placeholder\n        };\n        const Input       = inputType;\n        if (Input && Input.Clazz) {\n            inputProps.path = `@${id}`;\n        }\n        return <div\n            className={`${namespaceClass} ${(suggestions.length > 0 ? foundClass\n                : notFoundClass)}`}>\n            <Input {...inputProps} ref=\"input\"/>\n            {this.renderSuggestions()}\n        </div>\n    }\n\n}\n"]}