{"version":3,"sources":["../src/CollectionMixin.jsx"],"names":["settings","editPath","isEmpty","v","length","CollectionMixin","handleDelete","pos","val","pid","values","props","value","onWillDelete","Array","isArray","splice","onChange","handleAddBtn","e","preventDefault","key","createPid","mode","origKey","schema","createItemSchema","path","count","onEdit","handleEdit","handleBtnClick","action","handleSubmit","clonedValue","createDefValue","editTemplate","createTemplate","ObjectType","inline","title","isEdit","children","template","create","onButtonClick","canAdd","btn","addButton","defaultProps","buttonTemplate","onClick","iconClass","iconAddClass","renderAddBtn","renderAddEditTemplate","edit","getTemplateItem","fieldsets","fields","buttons","data","rowId","renderRow","sectionId","itemTemplate","contentTemplate","showKey","labelKey","last","isEditItem","canEdit","onMoveUp","handleMoveUp","onMoveDown","handleMoveDown","onDelete","canReorder","canDelete","errors","renderAdd","className","listContainerClass","addAt","renderAddInList","renderRows","inputClassName","contextTypes","valueManager","injector","propTypes","valueEvent","bool","string","itemType","typeDescription","editType","createType","button","cssClass","injectClass","oneOf","onWillReorder","onWillChange","onWillAdd","type","buttonsClass","label","buttonClass","primary"],"mappings":"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","file":"CollectionMixin.js","sourcesContent":["import React, { Component } from 'react';\nimport { clone, defaults, noop, resolveKey } from 'subschema-utils';\nimport UninjectedObjectType from 'subschema-core/lib/Object';\nimport PropTypes from 'subschema-prop-types';\nimport renderTemplate from 'subschema-core/lib/RenderTemplate';\n\nexport const settings = {\n    //configure the path that nested editing happens at.\n    editPath: `@edit@{path}`\n};\n\nconst isEmpty = (v) => {\n    if (v == null || v === false || v === true || v === '') {\n        return true;\n    }\n\n    if ('length' in v) {\n        return v.length == 0;\n    }\n\n\n    return false;\n};\nexport default class CollectionMixin extends Component {\n\n    static inputClassName = 'list-editor';\n    static contextTypes   = {\n        valueManager: PropTypes.valueManager,\n        injector    : PropTypes.injector\n    };\n    static propTypes      = {\n        onChange          : PropTypes.valueEvent,\n        path              : PropTypes.path,\n        canEdit           : PropTypes.bool,\n        canDelete         : PropTypes.bool,\n        canAdd            : PropTypes.bool,\n        inline            : PropTypes.bool,\n        labelKey          : PropTypes.string,\n        itemType          : PropTypes.typeDescription,\n        editType          : PropTypes.typeDescription,\n        createType        : PropTypes.typeDescription,\n        editPath          : PropTypes.value,\n        onEdit            : PropTypes.valueEvent,\n        editTemplate      : PropTypes.template,\n        createTemplate    : PropTypes.template,\n        buttonTemplate    : PropTypes.template,\n        itemTemplate      : PropTypes.template,\n        contentTemplate   : PropTypes.template,\n        buttons           : PropTypes.buttons,\n        addButton         : PropTypes.button,\n        listContainerClass: PropTypes.cssClass,\n        ObjectType        : PropTypes.injectClass,\n        value             : PropTypes.value,\n        title             : PropTypes.string,\n        errors            : PropTypes.errors,\n        addAt             : PropTypes.oneOf(\n            ['top', 'bottom', 'bottom-list', 'top-list'])\n    };\n\n    static defaultProps = {\n        addAt          : 'top',\n        onWillReorder  : noop,\n        onWillChange   : noop,\n        onWillAdd      : noop,\n        onWillDelete   : noop,\n        createTemplate : 'CollectionCreateTemplate',\n        editTemplate   : 'CollectionCreateTemplate',\n        buttonTemplate : 'ButtonTemplate',\n        itemTemplate   : 'ListItemTemplate',\n        contentTemplate: \"ContentItemTemplate\",\n        editPath       : settings.editPath,\n        onEdit         : settings.editPath,\n        itemType       : {\n            type: 'Text'\n        },\n        addButton      : {\n            \"label\"    : \"Add\",\n            \"className\": \"btn btn-default btn-add\"\n        },\n        buttons        : {\n            buttonsClass: 'btn-group pull-right',\n            buttons     : [{\n                label      : 'Cancel',\n                action     : 'cancel',\n                buttonClass: 'btn btn-default'\n            }, {\n                label      : 'Save',\n                type       : 'submit',\n                action     : 'submit',\n                primary    : true,\n                buttonClass: 'btn-primary btn'\n            }]\n        },\n        ObjectType     : UninjectedObjectType\n    };\n\n\n    getValue() {\n        return this.props.value;\n    }\n\n\n    handleDelete = (pos, val, pid) => {\n        const values = clone(this.props.value);\n        if (this.props.onWillDelete(pos, val) !== false) {\n            if (Array.isArray(values)) {\n                values.splice(pos, 1);\n            } else {\n                delete values[pid];\n            }\n            this.props.onChange(values);\n        }\n    };\n\n    handleAddBtn = (e) => {\n        e && e.preventDefault();\n        const key      = this.createPid();\n        const editPath = {\n            mode   : 'add',\n            origKey: key,\n            schema : this.createItemSchema(false),\n            path   : resolveKey(this.props.path, settings.editPath),\n            pos    : this.count(),\n            key,\n\n        };\n        this.props.onEdit(editPath);\n\n    };\n\n    handleEdit = (pos, value, key) => {\n        const editPath = {\n            value  : clone(value),\n            mode   : 'edit',\n            origKey: key,\n            schema : this.createItemSchema(true),\n            path   : resolveKey(this.props.path, settings.editPath),\n            pos,\n            key,\n        };\n        this.props.onEdit(editPath);\n    };\n\n    handleBtnClick = (e, action) => {\n        e && e.preventDefault();\n        switch (action) {\n            case 'close':\n            case 'cancel':\n                this.props.onEdit();\n                return;\n            default: {\n                this.handleSubmit();\n            }\n        }\n    };\n\n    handleSubmit() {\n        const editPath = this.props.editPath;//this.context.valueManager.path(resolveKey(this.props.path,\n                                             // settings.editPath));\n        if (!editPath) {\n            return;\n        }\n        const {\n                  value,\n                  key,\n                  origKey,\n                  mode\n              }           = editPath;\n        //value fix.\n        const clonedValue = isEmpty(this.props.value) ? this.createDefValue()\n            : clone(this.props.value);\n        if (mode == 'edit' && origKey != key) {\n            if (clonedValue) {\n                if (Array.isArray(clonedValue)) {\n                    clonedValue.splice(key, 1);\n                } else {\n                    delete clonedValue[origKey];\n                }\n            }\n        }\n        clonedValue[key] = value;\n        this.props.onChange(clonedValue);\n        this.props.onEdit();\n    };\n\n\n    renderAddEditTemplate() {\n        if (!this.props.editPath) {\n            return null;\n        }\n\n\n        let {\n                editTemplate, createTemplate,\n                ObjectType,\n                editPath: {\n                    mode, path, schema\n                },\n                inline,\n                title,\n            } = this.props;\n\n        const isEdit = mode === 'edit';\n        schema       = schema || this.createItemSchema(isEdit);\n        path         = path || resolveKey(this.props.path, settings.editPath);\n\n\n        const children = <ObjectType\n            key={`editForm-${path}`}\n            onButtonClick={this.handleBtnClick}\n            schema={schema}\n            path={path}\n        />;\n        return renderTemplate({\n            key          : `addEditTemplate-${path}`,\n            template     : isEdit ? editTemplate : createTemplate,\n            create       : isEdit ? false : true,\n            onButtonClick: this.handleBtnClick,\n            inline,\n            title,\n            children,\n        });\n    }\n\n    renderAddBtn() {\n        if (!this.props.canAdd) {\n            return null;\n        }\n\n        const btn = defaults({}, this.props.addButton,\n            CollectionMixin.defaultProps.addButton);\n\n        return renderTemplate({\n            template : this.props.buttonTemplate,\n            key      : \"addBtn\",\n            onClick  : this.handleAddBtn,\n            iconClass: this.props.iconAddClass,\n            ...btn,\n        });\n\n    }\n\n    renderAdd() {\n        if (!this.props.editPath) {\n            return this.renderAddBtn();\n        }\n        const { mode } = this.props.editPath;\n\n        if (mode) {\n            if (this.props.inline) {\n                if (mode === 'edit') {\n                    return this.renderAddBtn();\n                }\n            }\n            return this.renderAddEditTemplate()\n        }\n        return this.renderAddBtn()\n    }\n\n    createItemSchema(edit) {\n        const schema = {\n            schema   : this.getTemplateItem(edit),\n            fieldsets: [{\n                fields : ['key', 'value'],\n                buttons: this.props.buttons\n            }]\n\n        };\n        return schema;\n    }\n\n    renderRowEach(data, rowId) {\n        return this.renderRow(data, null, rowId, rowId);\n    }\n\n    renderRow(value, sectionId, pos, pid) {\n        pid     = pid || pos;\n        value   = { value };\n        const {\n                  itemTemplate,\n                  contentTemplate,\n                  editPath,\n                  showKey,\n                  labelKey,\n              } = this.props;\n\n        const last       = (this.count() === pos + 1);\n        const path       = resolveKey(this.props.path, pid);\n        const isEditItem = this.props.inline && pid == editPath.key;\n        const key        = `${path}.${pid}`;\n\n        const children = isEditItem ? this.renderAddEditTemplate(value, false)\n            : renderTemplate({\n                ...this.props,\n                buttons : false,\n                template: contentTemplate,\n                key     : `render-inline-${key}`,\n                onClick : this.props.canEdit ? this.handleEdit : null,\n                labelKey,\n                showKey,\n                pos,\n                pid,\n                value,\n                last,\n\n            });\n\n        return renderTemplate({\n            template  : itemTemplate,\n            onMoveUp  : this.handleMoveUp,\n            onMoveDown: this.handleMoveDown,\n            onDelete  : this.handleDelete,\n            onEdit    : this.handleEdit,\n            canReorder: this.props.canReorder,\n            canDelete : this.props.canDelete,\n            canEdit   : this.props.canEdit,\n            canAdd    : this.props.canAdd,\n            errors    : this.props.errors,\n            path,\n            labelKey,\n            showKey,\n            key,\n            pos,\n            pid,\n            value,\n            last,\n            children,\n        })\n    }\n\n    renderAddInList() {\n        return renderTemplate({\n            template: this.props.itemTemplate,\n            children: this.renderAdd()\n        });\n    }\n\n    render() {\n        const { className, listContainerClass } = this.props;\n        return (<div className={className}>\n            {this.props.addAt === 'top' ? this.renderAdd() : null}\n            <ul key='container' className={listContainerClass}>\n                {this.props.addAt == 'top-list' ? this.renderAddInList() : null}\n                {this.renderRows()}\n                {this.props.addAt == 'bottom-list' ? this.renderAddInList()\n                    : null}\n            </ul>\n            {this.props.addAt === 'bottom' ? this.renderAdd() : null}\n        </div>);\n    }\n\n}\n"]}