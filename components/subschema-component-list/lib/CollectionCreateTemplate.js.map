{"version":3,"sources":["../src/CollectionCreateTemplate.jsx"],"names":["CollectionCreateTemplate","props","inlineClass","children","title","panelClass","editText","createText","panelTitleClass","panelHeadingClass","panelBodyClass","groupClass","create","type","content","className","inline","renderInline","renderPanel","propTypes","node","style","bool","string","onChange","valueEvent","value","origValue","any","pid","errors","onButtonClick","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;IAEqBA,wB;;;;;;;;;;uCAqBF;AACX,mBAAO;AAAA;AAAA;AACH,+BAAW,KAAKC,KAAL,CAAWC,WADnB;AACiC,qBAAKD,KAAL,CAAWE;AAD5C,aAAP;AAEH;;;sCAEa;AAAA,yBACgH,KAAKF,KADrH;AAAA,gBACJG,KADI,UACJA,KADI;AAAA,gBACGC,UADH,UACGA,UADH;AAAA,gBACeC,QADf,UACeA,QADf;AAAA,gBACyBC,UADzB,UACyBA,UADzB;AAAA,gBACqCC,eADrC,UACqCA,eADrC;AAAA,gBACsDC,iBADtD,UACsDA,iBADtD;AAAA,gBACyEC,cADzE,UACyEA,cADzE;AAAA,gBACyFC,UADzF,UACyFA,UADzF;AAAA,gBACqGC,MADrG,UACqGA,MADrG;;AAEV,gBAAIR,UAAU,KAAd,EAAqB;AACjBA,wBAAQ,EAAR;AACH,aAFD,MAEO,IAAIA,SAAS,IAAb,EAAmB;AACtBA,wBAAQQ,SAASL,UAAT,GAAsBD,QAA9B;AACH,aAFM,MAEA,IAAI,OAAOF,KAAP,KAAiB,QAArB,EAA+B;AAClCA,wBAAQ;AACJS,0BAAW,IADP;AAEJC,6BAAYF,SAAYL,UAAZ,SAA0BH,KAA1B,GACHE,QADG,SACSF,KAHjB;AAIJW,+BAAWP;AAJP,iBAAR;AAMH;AACD,mBAAQ;AAAA;AAAA,kBAAK,WAAWH,UAAhB;AACJ,mEAAS,SAASD,KAAlB,EAAyB,MAAK,KAA9B,EAAoC,WAAWK,iBAA/C,GADI;AAEJ;AAAA;AAAA,sBAAK,WAAW,KAAKR,KAAL,CAAWS,cAA3B;AACI;AAAA;AAAA,0BAAK,WAAW,KAAKT,KAAL,CAAWU,UAA3B;AACK,6BAAKV,KAAL,CAAWE;AADhB;AADJ;AAFI,aAAR;AAQH;;;iCAEQ;AACL,mBAAO,KAAKF,KAAL,CAAWe,MAAX,GAAoB,KAAKC,YAAL,EAApB,GAA0C,KAAKC,WAAL,EAAjD;AACH;;;;;AApDgBlB,wB,CACVmB,S,GAAe;AAClBf,WAAe,6BAAUgB,IADP;AAElBC,WAAe,6BAAUA,KAFP;AAGlBL,YAAe,6BAAUM,IAHP;AAIlBV,YAAe,6BAAUU,IAJP;AAKlBhB,cAAe,6BAAUiB,MALP;AAMlBhB,gBAAe,6BAAUgB,MANP;AAOlBC,cAAe,6BAAUC,UAPP;AAQlBC,WAAe,6BAAUA,KARP;AASlBC,eAAe,6BAAUC,GATP;AAUlBC,SAAe,6BAAUD,GAVP;AAWlBE,YAAe,6BAAUA,MAXP;AAYlBC,mBAAe,6BAAUC;AAZP,C;AADLhC,wB,CAeViC,Y,GAAe;AAClBrB,YAAY,IADM;AAElBN,cAAY,OAFM;AAGlBC,gBAAY;AAHM,C;AAfLP,wB;kBAAAA,wB;AAqDpB","file":"CollectionCreateTemplate.js","sourcesContent":["import React, { Component } from 'react';\nimport Content from 'subschema-core/lib/Content';\nimport PropTypes from 'subschema-prop-types';\n\nexport default class CollectionCreateTemplate extends Component {\n    static propTypes    = {\n        title        : PropTypes.node,\n        style        : PropTypes.style,\n        inline       : PropTypes.bool,\n        create       : PropTypes.bool,\n        editText     : PropTypes.string,\n        createText   : PropTypes.string,\n        onChange     : PropTypes.valueEvent,\n        value        : PropTypes.value,\n        origValue    : PropTypes.any,\n        pid          : PropTypes.any,\n        errors       : PropTypes.errors,\n        onButtonClick: PropTypes.func\n    };\n    static defaultProps = {\n        create    : true,\n        editText  : 'Edit ',\n        createText: 'Create ',\n    };\n\n    renderInline() {\n        return <div\n            className={this.props.inlineClass}>{this.props.children}</div>\n    }\n\n    renderPanel() {\n        let { title, panelClass, editText, createText, panelTitleClass, panelHeadingClass, panelBodyClass, groupClass, create } = this.props;\n        if (title === false) {\n            title = '';\n        } else if (title == null) {\n            title = create ? createText : editText;\n        } else if (typeof title === 'string') {\n            title = {\n                type     : 'h3',\n                content  : (create ? `${createText} ${title}`\n                    : `${editText} ${title}`),\n                className: panelTitleClass\n            }\n        }\n        return (<div className={panelClass}>\n            <Content content={title} type='div' className={panelHeadingClass}/>\n            <div className={this.props.panelBodyClass}>\n                <div className={this.props.groupClass}>\n                    {this.props.children}\n                </div>\n            </div>\n        </div>);\n    }\n\n    render() {\n        return this.props.inline ? this.renderInline() : this.renderPanel();\n    }\n};\n\n"]}