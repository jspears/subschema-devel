{"version":3,"sources":["../src/ContentItemTemplate.jsx"],"names":["ContentItemTemplate","handleClick","e","preventDefault","props","onClick","pos","value","pid","showKey","children","itemInnerClass","itemClass","clickableClass","labelKey","key","_label","propTypes","func","any","number","bool","string","propName","componentName","rest","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;IAGqBA,mB;;;;;;;;;;;;;;0OA+BVC,W,GAAe,UAACC,CAAD,EAAO;AAClBA,iBAAKA,EAAEC,cAAF,EAAL;AACA,kBAAKC,KAAL,CAAWC,OAAX,CAAmB,MAAKD,KAAL,CAAWE,GAA9B,EAAmC,MAAKF,KAAL,CAAWG,KAAX,CAAiBA,KAApD,EACI,MAAKH,KAAL,CAAWI,GADf;AAEH,S;;AALR;;;;;iCAOS;AAAA,yBACqF,KAAKJ,KAD1F;AAAA,gBACGG,KADH,UACGA,KADH;AAAA,gBACUE,OADV,UACUA,OADV;AAAA,gBACmBC,QADnB,UACmBA,QADnB;AAAA,gBAC6BC,cAD7B,UAC6BA,cAD7B;AAAA,gBAC6CC,SAD7C,UAC6CA,SAD7C;AAAA,gBACwDC,cADxD,UACwDA,cADxD;AAAA,gBACwEC,QADxE,UACwEA,QADxE;;AAEL,gBAAMC,MAAoFR,MAAMQ,GAAN,IACG,EAD7F;AAEA,gBAAMC,SAAoFF,WACpF,yBAAKP,MAAMA,KAAX,EAAkBO,QAAlB,EAA4B,EAA5B,CADoF,GAClDP,MAAMA,KAD9C;AAEA,mBAAQ;AAAA;AAAA,kBAAM,SAAS,KAAKN,WAApB;AACM,+BAAW,KAAKG,KAAL,CAAWC,OAAX,GAAqBQ,cAArB,GAAsC,EADvD;AAEHJ,0BAAU;AAAA;AAAA,sBAAI,WAAWG,SAAf;AAA2BG;AAA3B,iBAAV,GAAiD,IAF9C;AAGJ;AAAA;AAAA,sBAAM,WAAWJ,cAAjB;AAAkCK;AAAlC,iBAHI;AAIHN;AAJG,aAAR;AAMH;;;;;AAjDgBV,mB,CAEViB,S,GAAe;AAClBZ,aAAgB,6BAAUa,IADR;AAElBV,SAAgB,6BAAUW,GAFR;AAGlBb,SAAgB,6BAAUc,MAHR;AAIlBX,aAAgB,6BAAUY,IAJR;AAKlBP,cAAgB,6BAAUQ,MALR;AAMlBX,oBAAgB,6BAAUW,MANR;AAOlBT,oBAAgB,6BAAUS,MAPR;AAQlBf,SARkB,iBAQZH,KARY,EAQLmB,QARK,EAQKC,aARL,EAQ6B;AAC3C,YAAIjB,QAAWH,MAAMmB,QAAN,CAAf;AACA,YAAIT,WAAWV,MAAMU,QAArB;;AAF2C,2CAANW,IAAM;AAANA,gBAAM;AAAA;;AAG3C,YAAI,WAAWrB,KAAf,EAAsB;AAClB,gBAAIU,QAAJ,EAAc;AACV,uBAAO,6BAAUY,IAAV,sCAAetB,MAAMG,KAArB,EAA4BO,QAA5B,EAAsCU,aAAtC,0CACAC,IADA,GAAP;AAEH,aAHD,MAGO;AACH,uBAAO,6BAAUC,IAAV,sCAAenB,KAAf,EAAsB,OAAtB,EAA+BiB,aAA/B,0CACAC,IADA,GAAP;AAEH;AACJ;AACD,YAAIrB,MAAMK,OAAV,EAAmB;AACf,mBAAO,6BAAUiB,IAAV,sCAAetB,KAAf,EAAsB,KAAtB,EAA6BoB,aAA7B,0CAA+CC,IAA/C,GAAP;AACH;AACJ;AAvBiB,C;AAFLzB,mB,CA2BV2B,Y,GAAe;AAClBd,oBAAgB;AADE,C;AA3BLb,mB;kBAAAA,mB","file":"ContentItemTemplate.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'subschema-prop-types';\nimport { get as _get } from 'subschema-utils';\n\n\nexport default class ContentItemTemplate extends Component {\n\n    static propTypes    = {\n        onClick       : PropTypes.func,\n        pid           : PropTypes.any,\n        pos           : PropTypes.number,\n        showKey       : PropTypes.bool,\n        labelKey      : PropTypes.string,\n        itemInnerClass: PropTypes.string,\n        clickableClass: PropTypes.string,\n        value(props, propName, componentName, ...rest) {\n            var value    = props[propName];\n            var labelKey = props.labelKey;\n            if ('value' in props) {\n                if (labelKey) {\n                    return PropTypes.node(props.value, labelKey, componentName,\n                        ...rest)\n                } else {\n                    return PropTypes.node(value, 'value', componentName,\n                        ...rest);\n                }\n            }\n            if (props.showKey) {\n                return PropTypes.node(props, 'key', componentName, ...rest);\n            }\n        }\n    };\n    static defaultProps = {\n        clickableClass: 'clickable'\n    };\n    //(pos, val, pid)\n           handleClick  = (e) => {\n               e && e.preventDefault();\n               this.props.onClick(this.props.pos, this.props.value.value,\n                   this.props.pid);\n           };\n\n    render() {\n        const { value, showKey, children, itemInnerClass, itemClass, clickableClass, labelKey } = this.props;\n        const key                                                                               = value.key\n                                                                                                  || '';\n        const _label                                                                            = labelKey\n            ? _get(value.value, labelKey, '') : value.value;\n        return (<span onClick={this.handleClick}\n                      className={this.props.onClick ? clickableClass : ''}>\n            {showKey ? <h4 className={itemClass}>{key}</h4> : null}\n            <span className={itemInnerClass}>{_label}</span>\n            {children}\n        </span>);\n    }\n}\n"]}