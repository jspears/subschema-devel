{"version":3,"sources":["../src/WizardMixin.js"],"names":["donner","d","WizardMixin","state","compState","prevState","maxState","done","handleOnClick","evt","steps","props","schema","fieldsets","length","value","target","setNavState","handleKeyDown","e","which","handleBtn","handleValidate","handleEnter","setState","animating","handleLeave","_validate","errors","disabled","onSubmit","bind","nextState","current","onNext","resp","go","Math","max","onPrevious","pos","paths","context","valueManager","validatePaths","buttons","rest","Array","isArray","next","previous","last","restBtns","isFirst","isLast","push","buttonClass","previousClass","lastClass","primary","nextClass","forEach","b","action","btn","preventDefault","handleSubmit","onAction","contextTypes","defaultProps","buttonsTemplate","Field","FieldSet","propTypes","any","template","submit","injectClass"],"mappings":"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","file":"WizardMixin.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'subschema-prop-types';\nimport UninjectedField from 'subschema-core/lib/Field';\nimport UninjectedFieldSet from 'subschema-core/lib/FieldSet';\nimport { flattenFields as fields } from 'subschema-utils';\nfunction donner(d) {\n    d && d();\n}\n\n\nexport default class WizardMixin extends Component {\n    static contextTypes = {\n        valueManager: PropTypes.valueManager\n    };\n\n    static defaultProps = {\n        buttonsTemplate: 'ButtonsTemplate',\n        Field          : UninjectedField,\n        FieldSet       : UninjectedFieldSet\n    };\n\n    static propTypes = {\n        schema         : PropTypes.any,\n        buttons        : PropTypes.buttons,\n        buttonsTemplate: PropTypes.template,\n        onSubmit       : PropTypes.submit,\n        FieldSet       : PropTypes.injectClass,\n        Field          : PropTypes.injectClass\n    };\n\n    state = { compState: 0, prevState: 0, maxState: 0, done: false };\n\n    handleSubmit(e) {\n        //    e && e.preventDefault();\n        this._validate(function (errors) {\n            if (errors) {\n\n                this.setState({ disabled: false, done: false });\n                return;\n            }\n\n            this.setState({ done: true });\n            this.props.onSubmit(e);\n            return;\n        }.bind(this));\n\n    }\n\n    next() {\n        const compState = this.state.compState,\n              nextState = compState + 1,\n              current   = this.props.schema.fieldsets[compState];\n        this.setState({ disabled: true });\n        this._validate(function (e) {\n            if (e) {\n                this.setState({ disabled: false, done: false });\n                return;\n            }\n            if (this.props.onNext((resp) => this.go(nextState, resp), nextState,\n                    current) === false) {\n                this.setState({\n                    disabled: false,\n                    done    : false,\n                    maxState: Math.max(nextState, this.state.maxState)\n                });\n                return;\n            }\n        }.bind(this));\n    }\n\n    previous() {\n        const compState = this.state.compState,\n              nextState = compState - 1,\n              current   = this.props.schema.fieldsets[compState];\n\n        this.setState({ disabled: true });\n        if (this.props.onPrevious((resp) => this.go(nextState, resp), nextState,\n                current) === false) {\n            this.setState({ disabled: false, done: false });\n            return;\n        }\n    };\n\n\n    go(pos, resp) {\n        if (resp === false) {\n            this.setState({ disabled: false, done: false });\n            return;\n        }\n        this.setNavState(resp == null ? pos : resp);\n    }\n\n    _validate(done) {\n        const paths = fields(this.props.schema.fieldsets[this.state.compState]);\n        this.context.valueManager.validatePaths(paths, done)\n    }\n\n\n    handleOnClick = (evt) => {\n        const steps = this.props.schema.fieldsets.length,\n              value = evt.target.value;\n        if (value < steps && value <= this.state.maxState) {\n            this.setNavState(value, true);\n        }\n\n    };\n\n\n    handleKeyDown = (e) => {\n        if (e.which === 13) {\n            if (this.state.compState < this.props.schema.fieldsets.length - 1) {\n                return this.handleBtn(e, 'next');\n            } else {\n                return this.handleBtn(e, 'submit');\n            }\n        }\n    };\n\n\n    handleValidate = () => {\n    };\n\n\n    createButtons(state) {\n        let { buttons } = this.props.schema.fieldsets[state];\n        let rest        = {};\n        if (buttons) {\n            if (buttons.buttons) {\n                ({ buttons, ...rest } = buttons);\n            }\n            if (!Array.isArray(buttons)) {\n                buttons = [buttons];\n            }\n        }\n        else {\n            buttons                                     = [];\n            const { next, previous, last, ...restBtns } = this.props.buttons;\n            rest                                        = restBtns;\n            const isFirst                               = state == 0,\n                  isLast                                = (state + 1\n                                                           === this.props.schema.fieldsets.length);\n\n            if (isLast) {\n                if (!isFirst) {\n                    buttons.push(\n                        { buttonClass: this.props.previousClass, ...previous });\n                }\n                buttons.push({\n                    buttonClass: this.props.lastClass,\n                    primary    : true, ...last\n                });\n            } else if (isFirst) {\n                buttons.push({\n                    buttonClass: this.props.nextClass,\n                    primary    : true, ...next\n                });\n            } else {\n                buttons.push(\n                    { buttonClass: this.props.previousClass, ...previous }, {\n                        buttonClass: this.props.nextClass,\n                        primary: true, ...next\n                    });\n            }\n\n        }\n\n        buttons.forEach(function (b) {\n            if (b.action === 'next' || b.action === 'submit') {\n                b.disabled = this.disabled;\n            }\n        }, this.state);\n        return {\n            ...rest,\n            buttons\n        }\n    }\n\n\n    handleBtn(e, action, btn) {\n        e && e.preventDefault();\n        switch (action) {\n\n            case 'previous': {\n                this.previous();\n                break;\n            }\n            case 'next': {\n                this.next();\n                break;\n            }\n            case 'submit': {\n                this.handleSubmit(e);\n                break;\n            }\n            default: {\n                this.props.onAction(this.state.compState, action, this);\n            }\n        }\n\n    };\n\n\n    handleEnter = () => {\n        this.setState({ animating: true })\n    };\n\n\n    handleLeave = (done) => {\n        this.setState({ animating: false })\n        done();\n    };\n\n\n}\n"]}