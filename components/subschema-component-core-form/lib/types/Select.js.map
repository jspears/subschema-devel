{"version":3,"sources":["../../src/types/Select.jsx"],"names":["Select","handleSelect","e","props","multiple","placeholder","values","options","target","i","l","length","option","selected","label","push","value","onChange","hasValue","ret","map","o","val","unshift","onValidate","path","fieldAttrs","renderOptions","propTypes","onBlur","blurValidate","id","name","htmlFor","className","typeClass","bool","valueEvent","changeValidate","defaultProps","injectedProps"],"mappings":"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","file":"Select.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'subschema-prop-types';\nimport { isArray } from 'subschema-utils';\n\nexport default class Select extends PureComponent {\n\n\n    static propTypes = {\n        onBlur     : PropTypes.blurValidate,\n        value      : PropTypes.value,\n        id         : PropTypes.id,\n        name       : PropTypes.htmlFor,\n        className  : PropTypes.typeClass,\n        fieldAttrs : PropTypes.fieldAttrs,\n        options    : PropTypes.options,\n        multiple   : PropTypes.bool,\n        onChange   : PropTypes.valueEvent,\n        placeholder: PropTypes.placeholder,\n        onValidate : PropTypes.changeValidate\n    };\n\n    static defaultProps = {\n        options : [],\n        multiple: false,\n        value   : ''\n    };\n\n    static injectedProps = {\n        value: '.'\n    };\n\n    handleSelect = (e) => {\n        let { multiple, placeholder } = this.props;\n        if (multiple) {\n            //normalize multiple  selection\n            var values = [], options = e.target.options, i = 0,\n                l                                          = options.length, option;\n            for (; i < l; i++) {\n                option = options[i];\n                if (option.selected) {\n                    if (option.label != placeholder) {\n                        values.push(option.value);\n                    }\n                }\n            }\n            this.props.onChange(values);\n            return\n        } else if (e.target.value === placeholder) {\n            this.props.onChange(null);\n            return;\n        }\n        this.props.onChange(e.target.value);\n\n    };\n\n    renderOptions(value) {\n        let { multiple, options, placeholder } = this.props;\n\n        options      = options || [];\n        let hasValue = false, ret = options.map(multiple ? (o, i) => {\n            return <option key={'s' + i} value={o.val}>{o.label}</option>;\n        } : (o, i) => {\n            if (!hasValue && o.val + '' == value + '') {\n                hasValue = true;\n            }\n            return <option key={'s' + i} value={o.val}>{o.label}</option>\n        });\n\n        if (placeholder) {\n            ret.unshift(<option key={'null-' + options.length}>\n                {placeholder}</option>);\n        }\n        return ret;\n    }\n\n    render() {\n        let { onValidate, onChange, value, path, fieldAttrs = {}, options, ...props } = this.props;\n        if (props.multiple && !isArray(value)) {\n            value = value ? [value] : [];\n        }\n        return <select {...props} value={value} {...fieldAttrs}\n                       onChange={this.handleSelect}>\n            {this.renderOptions(value)}\n        </select>\n    }\n\n}\n"]}