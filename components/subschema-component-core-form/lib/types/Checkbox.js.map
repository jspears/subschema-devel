{"version":3,"sources":["../../src/types/Checkbox.jsx"],"names":["Checkbox","handleChange","e","value","props","val","target","checked","onChange","onValidate","className","checkedClass","inputClassName","propTypes","valueEvent","onBlur","blurValidate","id","name","htmlFor","typeClass","cssClass","changeValidate","defaultProps","type"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,Q;;;;;;;;;;;;;;oNAqBjBC,Y,GAAe,UAACC,CAAD,EAAO;AAAA,gBACVC,KADU,GACA,MAAKC,KADL,CACVD,KADU;;AAGlB;AACA;;AACA,gBAAME,MAAMH,EAAEI,MAAF,CAASC,OAAT,GAAmB,CAACJ,KAAD,GAAS,IAAT,GAAgBA,KAAnC,GAA2C,CAACA,KAAD,GAAS,KAAT,GACjD,IADN;AAEA,kBAAKC,KAAL,CAAWI,QAAX,CAAoBH,GAApB;AACH,S;;;;;iCAEQ;AAAA,yBACsE,KAAKD,KAD3E;AAAA,gBACGI,QADH,UACGA,QADH;AAAA,gBACaC,UADb,UACaA,UADb;AAAA,gBACyBN,KADzB,UACyBA,KADzB;AAAA,gBACgCO,SADhC,UACgCA,SADhC;AAAA,gBAC2CC,YAD3C,UAC2CA,YAD3C;AAAA,gBAC4DP,KAD5D;;;AAGL,gBAAMG,UAAU,OAAOJ,KAAP,KAAiB,SAAjB,GAA6BA,KAA7B,GAAqCA,SAAS,IAAT,IACGA,UAAU,EADb,GAE/C,KAAKC,KAAL,CAAWG,OAFoC,GAE1B,IAF3B;AAGA,mBAAO,kEAAWH,KAAX,IAAkB,OAAOD,SAAS,IAAT,GAAgB,EAAhB,GAAqBA,KAA9C;AACO,2BAAWO,YAAY,GAAZ,IAAmBH,UAAUI,YAAV,GACxB,EADK,CADlB;AAGO,yBAASJ,WAAW,IAAX,GAAkB,KAAlB,GAA0BA,OAH1C;AAIO,0BAAU,KAAKN,YAJtB,IAAP;AAKH;;;;;AA1CgBD,Q,CAEVY,c,GAAiB,G;AAFPZ,Q,CAIVa,S,GAAY;AACfL,cAAc,6BAAUM,UADT;AAEfC,YAAc,6BAAUC,YAFT;AAGfb,WAAc,6BAAUA,KAHT;AAIfc,QAAc,6BAAUA,EAJT;AAKfC,UAAc,6BAAUC,OALT;AAMfT,eAAc,6BAAUU,SANT;AAOfT,kBAAc,6BAAUU,QAPT;AAQfZ,gBAAc,6BAAUa;AART,C;AAJFtB,Q,CAeVuB,Y,GAAe;AAClBC,UAAc,UADI;AAElBb,kBAAc;AAFI,C;AAfLX,Q;kBAAAA,Q","file":"Checkbox.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'subschema-prop-types';\n\nexport default class Checkbox extends PureComponent {\n\n    static inputClassName = ' ';\n\n    static propTypes = {\n        onChange    : PropTypes.valueEvent,\n        onBlur      : PropTypes.blurValidate,\n        value       : PropTypes.value,\n        id          : PropTypes.id,\n        name        : PropTypes.htmlFor,\n        className   : PropTypes.typeClass,\n        checkedClass: PropTypes.cssClass,\n        onValidate  : PropTypes.changeValidate\n    };\n\n    static defaultProps = {\n        type        : 'checkbox',\n        checkedClass: ''\n    };\n\n\n    handleChange = (e) => {\n        const { value } = this.props;\n\n        //Blur does not get called on checkbox, so we do check on change\n        // anyways.\n        const val = e.target.checked ? !value ? true : value : !value ? false\n            : null;\n        this.props.onChange(val);\n    };\n\n    render() {\n        const { onChange, onValidate, value, className, checkedClass, ...props } = this.props;\n\n        const checked = typeof value === 'boolean' ? value : value == null\n                                                             || value === ''\n            ? this.props.checked : true;\n        return <input {...props} value={value == null ? '' : value}\n                      className={className + ' ' + (checked ? checkedClass\n                          : '')}\n                      checked={checked == null ? false : checked }\n                      onChange={this.handleChange}/>\n    }\n}\n"]}