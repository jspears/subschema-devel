{"version":3,"sources":["../../src/types/Radio.jsx"],"names":["compare","val","val2","RadioInput","handleCheckChange","e","props","forceSelection","options","length","onChange","target","value","ret","path","name","checkedClass","map","option","index","label","labelHTML","rest","id","checked","key","template","itemTemplate","children","renderInput","className","renderOptions","inputClassName","defaultProps","propTypes","valueEvent","bool","cssClass","isRequired","htmlFor","typeClass","fieldAttrs"],"mappings":"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","file":"Radio.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { path as tpath } from 'subschema-utils';\nimport { RenderTemplate as renderTemplate } from 'subschema-core';\nimport PropTypes from 'subschema-prop-types';\n\nfunction compare(val, val2) {\n    if (val == null && val2 == null) {\n        return true;\n    }\n    if (val == null || val2 == null) {\n        return false;\n    }\n    return ('' + val === '' + val2);\n}\n\nexport default class RadioInput extends PureComponent {\n    static inputClassName = '  ';\n\n\n    static defaultProps = {\n        itemTemplate  : 'RadioItemTemplate',\n        options       : [],\n        forceSelection: false\n    };\n\n    static propTypes = {\n        onChange      : PropTypes.valueEvent,\n        itemTemplate  : PropTypes.template,\n        forceSelection: PropTypes.bool,\n        checkedClass  : PropTypes.cssClass,\n        options       : PropTypes.options.isRequired,\n        path          : PropTypes.path,\n        value         : PropTypes.value,\n        id            : PropTypes.id,\n        name          : PropTypes.htmlFor,\n        className     : PropTypes.typeClass,\n        fieldAttrs    : PropTypes.fieldAttrs\n    };\n\n    renderInput(onChange, ret, val) {\n        return <input type=\"radio\" onChange={onChange} {...ret} value={val}/>\n\n    }\n\n    handleCheckChange = (e) => {\n        //Make a radio behave like a checkbox when there is only 1.\n        if (this.props.forceSelection === false || this.props.options\n                                                   && this.props.options.length\n                                                      === 1) {\n            this.props.onChange(compare(e.target.value, this.props.value) ? null\n                : e.target.value);\n        } else {\n            this.props.onChange(e.target.value);\n        }\n    };\n\n    renderOptions(options) {\n        options                                 = options || [];\n        const onChange                          = this.handleCheckChange;\n        let { value, path, name, checkedClass } = this.props;\n        name                                    = name || path;\n        return options.map((option, index) => {\n            const { val, label, labelHTML, ...rest } = option;\n            const ret                                = {\n                ...rest,\n                id     : tpath(path, index),\n                name,\n                checked: compare(value, val)\n            };\n            return renderTemplate({\n                key     : `radio-item-${index}`,\n                template: this.props.itemTemplate, ...ret,\n                checkedClass,\n                label   : label || labelHTML,\n                children: this.renderInput(onChange, ret, val)\n            });\n            /*\n             return <RenderTemplate key={} template={this.props.itemTemplate} {...ret}\n             checkedClass={checkedClass} label={label || labelHTML}>\n             {this.renderInput(onChange, ret, val)}\n             </RenderTemplate>\n             */\n        }, this);\n    };\n\n    render() {\n        return <div className={this.props.className}>{this.renderOptions(\n            this.props.options)}</div>\n\n    }\n}\n"]}