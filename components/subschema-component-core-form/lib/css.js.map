{"version":3,"sources":["../src/css.js"],"names":["addClasses","addClass","hasClass","removeClass","classes","str","split","forEach","v","call","node","className","classList","add","api","contains","indexOf","remove","parts","idx","splice","join"],"mappings":";;;;;QAGgBA,U,GAAAA,U;QAgBAC,Q,GAAAA,Q;QAWAC,Q,GAAAA,Q;QAQAC,W,GAAAA,W;;AAtChB;;AAGO,SAASH,UAAT,CAAoBI,OAApB,EAA6BC,GAA7B,EAAkC;AACrC,QAAIA,OAAO,IAAX,EAAiB;AACb;AACH;AACD,QAAI,8BAASA,GAAT,CAAJ,EAAmB;AACf,kCAAKD,OAAL,EAAcC,IAAIC,KAAJ,CAAU,MAAV,CAAd;AACH;AACD,QAAI,6BAAQD,GAAR,CAAJ,EAAkB;AACdA,YAAIE,OAAJ,CAAY,UAACC,CAAD;AAAA,mBAAKR,WAAWI,OAAX,EAAoBI,CAApB,CAAL;AAAA,SAAZ;AACH;AACD,QAAI,gCAAWH,GAAX,CAAJ,EAAqB;AACjBL,mBAAWI,OAAX,EAAoBC,IAAII,IAAJ,CAAS,IAAT,CAApB;AACH;AAEJ;;AAEM,SAASR,QAAT,CAAkBS,IAAlB,EAAwBC,SAAxB,EAAmC;AACtC,QAAIA,SAAJ,EAAe;AACX,YAAID,KAAKE,SAAT,EAAoB;AAChBF,iBAAKE,SAAL,CAAeC,GAAf,CAAmBF,SAAnB;AACH,SAFD,MAEO,IAAI,CAACG,IAAIZ,QAAJ,CAAaQ,IAAb,EAAmBC,SAAnB,CAAL,EAAoC;AACvCD,iBAAKC,SAAL,GAAiBD,KAAKC,SAAL,GAAiB,GAAjB,GAAuBA,SAAxC;AACH;AACJ;AACD,WAAOD,IAAP;AACH;;AAEM,SAASR,QAAT,CAAkBQ,IAAlB,EAAwBC,SAAxB,EAAmC;AACtC,QAAID,KAAKE,SAAT,EAAoB;AAChB,eAAO,CAAC,CAACD,SAAF,IAAeD,KAAKE,SAAL,CAAeG,QAAf,CAAwBJ,SAAxB,CAAtB;AACH;AACD,WAAOD,KAAKC,SAAL,CAAeL,KAAf,CAAqB,MAArB,EAA6BU,OAA7B,CAAqCL,SAArC,IAAkD,CAAC,CAA1D;AACH;;AAGM,SAASR,WAAT,CAAqBO,IAArB,EAA2BC,SAA3B,EAAsC;AACzC,QAAIA,SAAJ,EAAe;AACX,YAAID,KAAKE,SAAT,EAAoB;AAChBF,iBAAKE,SAAL,CAAeK,MAAf,CAAsBN,SAAtB;AACH,SAFD,MAEO;AACH,gBAAIO,QAAQR,KAAKC,SAAL,CAAeL,KAAf,CAAqB,MAArB,CAAZ;AAAA,gBAA0Ca,GAA1C;AACA,mBAAO,CAACA,MAAMD,MAAMF,OAAN,CAAcL,SAAd,CAAP,IAAmC,CAAC,CAA3C,EAA8C;AAC1CO,sBAAME,MAAN,CAAaD,GAAb,EAAkB,CAAlB;AACH;AACDT,iBAAKC,SAAL,GAAiBO,MAAMG,IAAN,CAAW,GAAX,CAAjB;AACH;AACJ;AACD,WAAOX,IAAP;AACH;;kBAEc;AACXR,sBADW;AAEXC,4BAFW;AAGXF,sBAHW;AAIXD;AAJW,C","file":"css.js","sourcesContent":["import {isString,isArray, isFunction, push} from 'subschema-utils';\n\n\nexport function addClasses(classes, str) {\n    if (str == null) {\n        return;\n    }\n    if (isString(str)) {\n        push(classes, str.split(/\\s+?/));\n    }\n    if (isArray(str)) {\n        str.forEach((v)=>addClasses(classes, v));\n    }\n    if (isFunction(str)) {\n        addClasses(classes, str.call(this));\n    }\n\n}\n\nexport function addClass(node, className) {\n    if (className) {\n        if (node.classList) {\n            node.classList.add(className);\n        } else if (!api.hasClass(node, className)) {\n            node.className = node.className + ' ' + className;\n        }\n    }\n    return node;\n}\n\nexport function hasClass(node, className) {\n    if (node.classList) {\n        return !!className && node.classList.contains(className);\n    }\n    return node.className.split(/\\s+?/).indexOf(className) > -1;\n}\n\n\nexport function removeClass(node, className) {\n    if (className) {\n        if (node.classList) {\n            node.classList.remove(className);\n        } else {\n            var parts = node.className.split(/\\s+?/), idx;\n            while ((idx = parts.indexOf(className)) > -1) {\n                parts.splice(idx, 1)\n            }\n            node.className = parts.join(' ');\n        }\n    }\n    return node;\n}\n\nexport default {\n    hasClass,\n    removeClass,\n    addClass,\n    addClasses\n};"]}